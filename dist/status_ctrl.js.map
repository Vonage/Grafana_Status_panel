{"version":3,"sources":["../src/status_ctrl.js"],"names":["MetricsPanelCtrl","_","TimeSeries","coreModule","kbn","moment","panelDefaults","flipCard","flipTime","colorMode","colors","crit","warn","ok","disable","isGrayOnNoData","isIgnoreOKColors","isHideAlertsOnDisable","StatusPluginCtrl","$scope","$injector","$log","$filter","annotationsSrv","defaultsDeep","panel","filter","valueHandlers","aggregations","displayTypes","colorModes","each","targets","t","valueHandler","Date","events","on","onRender","bind","postRefresh","onDataError","onDataReceived","onInitEditMode","addFilters","numberOrTextFilter","input","angular","isNumber","$stateful","textRegex","length","regex","RegExp","e","matchResults","match","fixedSpan","span","measurements","duplicates","measurement","hide","m","res","alias","target","addEditorTab","unitFormats","getUnitFormats","subItem","units","value","render","$panelContainer","find","css","$panelContoller","height","minHeight","tail","panelWidth","innerWidth","isNaN","parseInt","slice","maxWidth","Number","undefined","String","c","w","getTime","setElementHeight","setTextMaxWidth","upgradeOldVersion","clusterName","displayName","replace","namePrefix","addClass","removeClass","disabled","display","annotation","extraMoreAlerts","series","s","url","displayType","valueDisplayRegex","validateRegex","aggregation","max","datapoints","point","stats","min","total","avg","display_value","handleThresholdStatus","handleDisabledStatus","handleTextOnly","autoFlip","updatePanelState","handleCssDisplay","parseUri","handleMaxAlertsToShow","isFloat","thresholds","parseThresholds","inverted","isCritical","isWarning","isCheckRanges","warnIsNumber","critIsNumber","formatDisplayValue","push","isFinite","decimals","Math","floor","toFixed","valueFormats","date","dashboard","isTimezoneUtc","utc","format","dateFormat","disabledValue","panelState","okColor","maxAlertNumber","currentMaxAllowedAlerts","filteredOutAlerts","arrayNamesToSlice","forEach","originAlertCount","arrayName","links","link","type","uri","dashUri","params","targetBlank","dataList","map","seriesHandler","timeoutId","clearInterval","setInterval","toggleClass","scope","elem","attrs","ctrl","metricOptions","parseFloat","valueOf","val","toString","toLowerCase","indexOf","seriesData","flotpairs","getFlotPairs","templateUrl"],"mappings":"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","file":"status_ctrl.js","sourcesContent":["﻿import {MetricsPanelCtrl} from \"app/plugins/sdk\";\nimport \"app/plugins/panel/graph/legend\";\nimport \"app/plugins/panel/graph/series_overrides_ctrl\";\nimport _ from \"lodash\";\nimport TimeSeries from \"app/core/time_series2\";\nimport coreModule from \"app/core/core_module\";\nimport kbn from \"app/core/utils/kbn\";\nimport moment from \"moment\";\n\nimport './css/status_panel.css!';\n\n// Set and populate panel defaults\nconst panelDefaults = {\n\tflipCard: false,\n\tflipTime: 5,\n\tcolorMode: 'Panel',\n\t// Changed colors to match Table Panel so colorised text is easier to read\n\tcolors: {\n\t\tcrit: 'rgba(245, 54, 54, 0.9)',\n\t\twarn: 'rgba(237, 129, 40, 0.9)',\n\t\tok: 'rgba(50, 128, 45, 0.9)',\n\t\tdisable: 'rgba(128, 128, 128, 0.9)'\n\t},\n\tisGrayOnNoData: false,\n\tisIgnoreOKColors: false,\n\tisHideAlertsOnDisable: false\n};\n\nexport class StatusPluginCtrl extends MetricsPanelCtrl {\n\t/** @ngInject */\n\tconstructor($scope, $injector, $log, $filter, annotationsSrv) {\n\t\tsuper($scope, $injector);\n\t\t_.defaultsDeep(this.panel, panelDefaults);\n\n\t\t//this.log = $log.debug;\n\t\tthis.filter = $filter;\n\n\t\tthis.valueHandlers = ['Number Threshold', 'String Threshold', 'Date Threshold', 'Disable Criteria', 'Text Only'];\n\t\tthis.aggregations = ['Last', 'First', 'Max', 'Min', 'Sum', 'Avg'];\n\t\tthis.displayTypes = ['Regular', 'Annotation'];\n\t\tthis.colorModes = ['Panel', 'Metric', 'Disabled'];\n\n\t\t// Dates get stored as strings and will need to be converted back to a Date objects\n\t\t_.each(this.panel.targets, (t) => {\n\t\t\tif (t.valueHandler === \"Date Threshold\") {\n\t\t\t\tif (typeof t.crit != \"undefined\") t.crit = new Date(t.crit);\n\t\t\t\tif (typeof t.warn != \"undefined\") t.warn = new Date(t.warn);\n\t\t\t}\n\t\t});\n\n\t\tthis.panel.flipTime = this.panel.flipTime || 5;\n\n\t\t/** Bind events to functions **/\n\t\tthis.events.on('render', this.onRender.bind(this));\n\t\tthis.events.on('refresh', this.postRefresh.bind(this));\n\t\tthis.events.on('data-error', this.onDataError.bind(this));\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n\t\tthis.addFilters()\n\t}\n\n\taddFilters() {\n\t\tcoreModule.filter('numberOrText', () => {\n\t\t\tlet numberOrTextFilter = (input) => {\n\t\t\t\tif(angular.isNumber(input)) {\n\t\t\t\t\treturn this.filter('number')(input);\n\t\t\t\t} else {\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnumberOrTextFilter.$stateful = true;\n\t\t\treturn numberOrTextFilter;\n\t\t});\n\n\t\tcoreModule.filter('numberOrTextWithRegex', () => {\n\t\t\tlet numberOrTextFilter = (input, textRegex) => {\n\t\t\t\tif(angular.isNumber(input)) {\n\t\t\t\t\treturn this.filter('number')(input);\n\t\t\t\t} else {\n\t\t\t\t\tif(textRegex == null || textRegex.length == 0) {\n\t\t\t\t\t\treturn input;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet regex;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregex = new RegExp(textRegex);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!input) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet matchResults = input.match(regex);\n\t\t\t\t\t\tif (matchResults == null) {\n\t\t\t\t\t\t\treturn input;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn matchResults[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnumberOrTextFilter.$stateful = true;\n\t\t\treturn numberOrTextFilter;\n\t\t});\n\t}\n\n\tpostRefresh() {\n\t\tif (this.panel.fixedSpan) {\n\t\t\tthis.panel.span = this.panel.fixedSpan;\n\t\t}\n\n\t\tthis.measurements = this.panel.targets;\n\n\t\t/** Duplicate alias validation **/\n\t\tthis.duplicates = false;\n\n\t\tthis.measurements = _.filter(this.measurements, (measurement) => {\n\t\t\treturn !measurement.hide;\n\t\t});\n\n\t\t_.each(this.measurements, (m) => {\n\t\t\tlet res = _.filter(this.measurements, (measurement) => {\n\t\t\t\treturn (m.alias == measurement.alias || (m.target == measurement.target && m.target)) && !m.hide;\n\t\t\t});\n\n\t\t\tif (res.length > 1) {\n\t\t\t\tthis.duplicates = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tonInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/vonage-status-panel/editor.html', 2);\n\t\t// Load in the supported units-of-measure formats so they can be displayed in the editor\n\t\tthis.unitFormats = kbn.getUnitFormats();\n\t}\n\n    setUnitFormat(measurement, subItem) {\n\t\tmeasurement.units = subItem.value;\n\t\tthis.render();\n\t}\n\n\tsetElementHeight() {\n\t\tthis.$panelContainer.find('.status-panel').css('min-height', this.$panelContoller.height + 'px');\n\t\tthis.minHeight = this.$panelContoller.height-10;\n\t}\n\n\tsetTextMaxWidth() {\n\t\tlet tail = ' …';\n\t\tlet panelWidth = this.$panelContainer.innerWidth();\n\t\tif (isNaN(panelWidth))\n\t\t\tpanelWidth = parseInt(panelWidth.slice(0, -2), 10) / 12;\n\t\tpanelWidth = panelWidth - 20;\n\t\tthis.maxWidth = panelWidth;\n\t}\n\n\tonHandlerChange(measurement) {\n\t\t// If the Threshold type changes between Number/String/Date then try and recast the thresholds to keep consistent\n\t\tif (measurement.valueHandler === \"Number Threshold\") {\n\t\t\tmeasurement.crit = (isNaN(Number(measurement.crit))) ? undefined : Number(measurement.crit);\n\t\t\tmeasurement.warn = (isNaN(Number(measurement.warn))) ? undefined : Number(measurement.warn);\n\t\t} else if (measurement.valueHandler === \"String Threshold\") {\n\t\t\tif (typeof measurement.crit != \"undefined\") measurement.crit = String(measurement.crit);\n\t\t\tif (typeof measurement.warn != \"undefined\") measurement.warn = String(measurement.warn);\n\t\t} else if (measurement.valueHandler === \"Date Threshold\") {\n\t\t\tlet c = new Date(measurement.crit), w = new Date(measurement.warn);\n\t\t\tmeasurement.crit = (isNaN(c.getTime())) ? undefined : c;\n\t\t\tmeasurement.warn = (isNaN(w.getTime())) ? undefined : w;\n\t\t}\n\t\tthis.onRender();\n\t}\n\n\tonRender() {\n\t\tthis.setElementHeight();\n\t\tthis.setTextMaxWidth();\n\t\tthis.upgradeOldVersion();\n\n\t\tif (this.panel.clusterName) {\n\t\t\tthis.panel.displayName =\n\t\t\t\tthis.filter('interpolateTemplateVars')(this.panel.clusterName, this.$scope)\n\t\t\t\t\t.replace(new RegExp(this.panel.namePrefix, 'i'), '');\n\t\t} else {\n\t\t\tthis.panel.displayName = \"\";\n\t\t}\n\n\t\tif(this.panel.flipCard){\n\t\t  this.$panelContainer.addClass(\"effect-hover\");\n\t\t} else {\n\t\t  this.$panelContainer.removeClass(\"effect-hover\");\n\t\t}\n\n\t\tlet targets = this.panel.targets;\n\n\t\tthis.crit = [];\n\t\tthis.warn = [];\n\t\tthis.disabled = [];\n\t\tthis.display = [];\n\t\tthis.annotation = [];\n\t\tthis.extraMoreAlerts = null;\n\n\t\t_.each(this.series, (s) => {\n\t\t\tlet target = _.find(targets, (target) => {\n\t\t\t\treturn target.alias == s.alias || target.target == s.alias;\n\t\t\t});\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ts.alias = target.alias;\n\t\t\ts.url = target.url;\n\t\t\ts.display = true;\n\t\t\ts.displayType = target.displayType;\n\t\t\ts.valueDisplayRegex = \"\";\n\n\t\t\tif(this.validateRegex(target.valueDisplayRegex)) {\n\t\t\t\ts.valueDisplayRegex = target.valueDisplayRegex;\n\t\t\t}\n\n\t\t\tlet value;\n\t\t\tswitch (target.aggregation) {\n\t\t\t\tcase 'Max':\n\t\t\t\t\tvalue = _.max(s.datapoints, (point) => { return point[0]; })[0];\n\t\t\t\t\tvalue = s.stats.max;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Min':\n\t\t\t\t\tvalue = _.min(s.datapoints, (point) => { return point[0]; })[0];\n\t\t\t\t\tvalue = s.stats.min;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Sum':\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\t_.each(s.datapoints, (point) => { value += point[0] });\n\t\t\t\t\tvalue = s.stats.total;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Avg':\n\t\t\t\t\tvalue = s.stats.avg;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'First':\n\t\t\t\t\tvalue = s.datapoints[0][0];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue = s.datapoints[s.datapoints.length - 1][0];\n\t\t\t}\n\n\t\t\ts.display_value = value;\n\n\t\t\tif (target.valueHandler == \"Number Threshold\" ||\n\t\t\t\ttarget.valueHandler == \"String Threshold\" ||\n\t\t\t\ttarget.valueHandler == \"Date Threshold\") {\n\t\t\t\tthis.handleThresholdStatus(s, target);\n\t\t\t}\n\t\t\telse if (target.valueHandler == \"Disable Criteria\") {\n\t\t\t\tthis.handleDisabledStatus(s,target);\n\t\t\t}\n\t\t\telse if (target.valueHandler == \"Text Only\") {\n\t\t\t\tthis.handleTextOnly(s, target);\n\t\t\t}\n\t\t});\n\n\t\tif(this.panel.isHideAlertsOnDisable && this.disabled.length > 0) {\n\t\t\tthis.crit = [];\n\t\t\tthis.warn = [];\n\t\t\tthis.display = [];\n\t\t}\n\n\t\tthis.autoFlip();\n\t\tthis.updatePanelState();\n\t\tthis.handleCssDisplay();\n\t\tthis.parseUri();\n\n\t\t//This must appear after handling the css style of the panel\n\t\tthis.handleMaxAlertsToShow();\n\t}\n\n\tupgradeOldVersion() {\n\t\tlet targets = this.panel.targets;\n\n\t\t//Handle legacy code\n\t\t_.each(targets, (target) => {\n\t\t\tif(target.valueHandler == null) {\n\t\t\t\ttarget.valueHandler = target.displayType;\n\t\t\t\tif(target.valueHandler == \"Annotation\") {\n\t\t\t\t\ttarget.valueHandler = \"Text Only\"\n\t\t\t\t}\n\t\t\t\ttarget.displayType = this.displayTypes[0];\n\t\t\t}\n\t\t});\n\n\t\t// Depreciate Threshold in favour of Type specific versions\n\t\t_.each(targets, (target) => {\n\t\t\tif (target.valueHandler === \"Threshold\") {\n\t\t\t\t// Use the same logic as Threshold Parsing to ensure we retain same behaviour\n\t\t\t\t// i.e. map to Number Threshold if two floats (i.e. range check) otherwise map to String Threshold (i.e. exact match)\n\t\t\t\tif (StatusPluginCtrl.isFloat(target.crit) && StatusPluginCtrl.isFloat(target.warn)) {\n\t\t\t\t\ttarget.valueHandler = \"Number Threshold\"\n\t\t\t\t\ttarget.crit = Number(target.crit);\n\t\t\t\t\ttarget.warn = Number(target.warn);\n\t\t\t\t} else {\n\t\t\t\t\ttarget.valueHandler = \"String Threshold\"\n\t\t\t\t\tif (typeof target.crit != \"undefined\") target.crit = String(target.crit);\n\t\t\t\t\tif (typeof target.warn != \"undefined\") target.warn = String(target.warn);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thandleThresholdStatus(series, target) {\n\t\tseries.thresholds = StatusPluginCtrl.parseThresholds(target);\n\t\tseries.inverted = series.thresholds.crit < series.thresholds.warn;\n\t\tseries.display = target.display;\n\n\t\tlet isCritical = false;\n\t\tlet isWarning = false;\n\t\tlet isCheckRanges = series.thresholds.warnIsNumber && series.thresholds.critIsNumber;\n\t\tif (isCheckRanges) {\n\t\t\tif (!series.inverted) {\n\t\t\t\tif (series.display_value >= series.thresholds.crit) {\n\t\t\t\t\tisCritical = true\n\t\t\t\t} else if (series.display_value >= series.thresholds.warn) {\n\t\t\t\t\tisWarning = true\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (series.display_value <= series.thresholds.crit) {\n\t\t\t\t\tisCritical = true\n\t\t\t\t} else if (series.display_value <= series.thresholds.warn) {\n\t\t\t\t\tisWarning = true\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (series.display_value == series.thresholds.crit) {\n\t\t\t\tisCritical = true\n\t\t\t} else if (series.display_value == series.thresholds.warn) {\n\t\t\t\tisWarning = true\n\t\t\t}\n\t\t}\n\n\t\t// Add units-of-measure and decimal formatting or date formatting as needed\n\t\tseries.display_value = this.formatDisplayValue(series.display_value, target);\n\n\t\tif(isCritical) {\n\t\t\tthis.crit.push(series);\n\t\t\tseries.displayType = this.displayTypes[0]\n\t\t} else if(isWarning) {\n\t\t\tthis.warn.push(series);\n\t\t\tseries.displayType = this.displayTypes[0]\n\t\t} else if (series.display) {\n\t\t\tif(series.displayType == \"Annotation\") {\n\t\t\t\tthis.annotation.push(series);\n\t\t\t} else {\n\t\t\t\tthis.display.push(series);\n\t\t\t}\n\t\t}\n\t}\n\n\tformatDisplayValue(value, target) {\n\t\t// Format the display value. Set to \"Invalid\" if value is out-of-bounds or a type mismatch with the handler\n\t\tif (target.valueHandler === \"Number Threshold\") {\n\t\t\tif (_.isFinite(value)) {\n\t\t\t\tlet units = (typeof target.units === \"string\") ? target.units : 'none';\n\t\t\t\tlet decimals = (Math.floor(value) === value) ? 0 : value.toFixed(20).replace(/^-?\\d*\\.?|0+$/g, '').length;\n\t\t\t\tdecimals = (typeof target.decimals === \"number\") ? target.decimals : decimals;\n\t\t\t\tvalue = kbn.valueFormats[units](value, decimals, null);\n\t\t\t} else {\n\t\t\t\tvalue = \"Invalid Number\";\n\t\t\t}\n\t\t} else if (target.valueHandler === \"String Threshold\") {\n\t\t\tif (value === undefined || value === null || value !== value)\n\t\t\t\tvalue = \"Invalid String\";\n\t\t} else if (target.valueHandler === \"Date Threshold\") {\n\t\t\tif (_.isFinite(value)) {\n\t\t\t\tlet date = moment(new Date(value));\n\t\t\t\tif (this.dashboard.isTimezoneUtc()) date = date.utc();\n\t\t\t\tvalue = date.format(target.dateFormat);\n\t\t\t} else {\n\t\t\t\tvalue = \"Invalid Date\";\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\thandleDisabledStatus(series, target) {\n\t\tseries.displayType = this.displayTypes[0];\n\t\tseries.disabledValue = target.disabledValue;\n\n\t\tif (series.display_value == series.disabledValue) {\n\t\t\tthis.disabled.push(series);\n\t\t}\n\t}\n\n\thandleTextOnly(series, target) {\n\t\tif(series.displayType == \"Annotation\") {\n\t\t\tthis.annotation.push(series);\n\t\t} else {\n\t\t\tthis.display.push(series);\n\t\t}\n\t}\n\n\tupdatePanelState() {\n\n\t\tif(this.duplicates) {\n\t\t\tthis.panelState = 'error-state';\n\t\t} else if (this.disabled.length > 0) {\n\t\t\tthis.panelState = 'disabled-state';\n\t\t} else if (this.crit.length > 0) {\n\t\t\tthis.panelState = 'error-state';\n\t\t} else if (this.warn.length > 0) {\n\t\t\tthis.panelState = 'warn-state';\n\t\t} else if((this.series == undefined || this.series.length == 0) && this.panel.isGrayOnNoData) {\n\t\t\tthis.panelState = 'no-data-state';\n\t\t} else {\n\t\t\tthis.panelState = 'ok-state';\n\t\t}\n\t}\n\n\thandleCssDisplay() {\n\t\tthis.$panelContainer.removeClass('error-state warn-state disabled-state ok-state no-data-state');\n\t\tthis.$panelContainer.addClass(this.panelState);\n\n\t\tlet okColor = (this.panel.isIgnoreOKColors) ? '' : this.panel.colors.ok;\n\n\t\tif (this.panel.colorMode === \"Panel\") {\n\t\t\tswitch(this.panelState) {\n\t\t\t\tcase 'disabled-state': this.$panelContainer.css('background-color', this.panel.colors.disable); break;\n\t\t\t\tcase 'error-state': this.$panelContainer.css('background-color', this.panel.colors.crit); break;\n\t\t\t\tcase 'warn-state': this.$panelContainer.css('background-color', this.panel.colors.warn); break;\n\t\t\t\tcase 'no-data-state': this.$panelContainer.css('background-color', this.panel.colors.disable); break;\n\t\t\t\tdefault: this.$panelContainer.css('background-color', okColor); break;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.$panelContainer.css('background-color', '');\n\t\t}\n\t}\n\n\thandleMaxAlertsToShow() {\n\t\tif(this.panel.maxAlertNumber != null && this.panel.maxAlertNumber >= 0) {\n\t\t\tlet currentMaxAllowedAlerts = this.panel.maxAlertNumber;\n\t\t\tlet filteredOutAlerts = 0;\n\t\t\tlet arrayNamesToSlice = [\"disabled\", \"crit\", \"warn\", \"display\"];\n\t\t\tarrayNamesToSlice.forEach( arrayName => {\n\t\t\t\tlet originAlertCount = this[arrayName].length;\n\t\t\t\tthis[arrayName] = this[arrayName].slice(0,currentMaxAllowedAlerts);\n\t\t\t\tcurrentMaxAllowedAlerts = Math.max(currentMaxAllowedAlerts - this[arrayName].length, 0);\n\t\t\t\tfilteredOutAlerts += (originAlertCount - this[arrayName].length);\n\t\t\t});\n\n\t\t\tif(filteredOutAlerts > 0) {\n\t\t\t\tthis.extraMoreAlerts = \"+ \" + filteredOutAlerts + \" more\"\n\t\t\t}\n\t\t}\n\t}\n\n\tparseUri() {\n\t\tif (this.panel.links && this.panel.links.length > 0) {\n\t\t\tlet link = this.panel.links[0];\n\n\t\t\tif (link.type == \"absolute\") {\n\t\t\t\tthis.uri = link.url;\n\t\t\t} else {\n\t\t\t\tthis.uri = 'dashboard/' + link.dashUri;\n\t\t\t}\n\n\t\t\tif (link.params) {\n\t\t\t\tthis.uri +=  \"?\" + link.params;\n\t\t\t}\n\n\t\t\tthis.targetBlank = link.targetBlank;\n\t\t} else {\n\t\t\tthis.uri = undefined;\n\t\t}\n\t}\n\n\tvalidateRegex(textRegex) {\n\t\tif(textRegex == null || textRegex.length == 0) {\n\t\t\treturn true\n\t\t}\n\t\ttry {\n\t\t\tlet regex = new RegExp(textRegex);\n\t\t\treturn true\n\t\t} catch(e) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\tstatic parseThresholds(metricOptions) {\n\t\tlet res = {};\n\n\t\tif (StatusPluginCtrl.isFloat(metricOptions.warn)) {\n\t\t\tres.warn = parseFloat(metricOptions.warn);\n\t\t\tres.warnIsNumber = true;\n\t\t} else if (metricOptions.warn instanceof Date) {\n\t\t\t// Convert Dates to Numbers and leverage existing threshold logic\n\t\t\tres.warn = metricOptions.warn.valueOf();\n\t\t\tres.warnIsNumber = true;\n\t\t} else {\n\t\t\tres.warn = metricOptions.warn;\n\t\t\tres.warnIsNumber = false;\n\t\t}\n\n\t\tif (StatusPluginCtrl.isFloat(metricOptions.crit)) {\n\t\t\tres.crit = parseFloat(metricOptions.crit);\n\t\t\tres.critIsNumber = true;\n\t\t} else if (metricOptions.crit instanceof Date) {\n\t\t\tres.crit = metricOptions.crit.valueOf();\n\t\t\tres.critIsNumber = true;\n\t\t} else {\n\t\t\tres.crit = metricOptions.crit;\n\t\t\tres.critIsNumber = false;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tstatic isFloat(val) {\n\t\tif (!isNaN(val) && val.toString().toLowerCase().indexOf('e') == -1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tonDataReceived(dataList) {\n\t\tthis.series = dataList.map(StatusPluginCtrl.seriesHandler.bind(this));\n\t\tthis.render();\n\t}\n\n\tonDataError() {\n\t\tthis.crit = [];\n\t\tthis.warn = [];\n\t}\n\n\tstatic seriesHandler(seriesData) {\n\t\tvar series = new TimeSeries({\n\t\t\tdatapoints: seriesData.datapoints,\n\t\t\talias: seriesData.target\n\t\t});\n\n\t\tseries.flotpairs = series.getFlotPairs(\"connected\");\n\n\t\treturn series;\n\t}\n\n\t$onDestroy() {\n\t\tif(this.timeoutId) clearInterval(this.timeoutId);\n\t}\n\n\tautoFlip() {\n\t\tif (this.timeoutId) clearInterval(this.timeoutId);\n\t\tif (this.panel.flipCard && (this.crit.length > 0 || this.warn.length > 0 || this.disabled.length > 0)) {\n\t\t\tthis.timeoutId = setInterval(() => {\n\t\t\t\tthis.$panelContainer.toggleClass(\"flipped\");\n\t\t\t}, this.panel.flipTime * 1000);\n\t\t}\n\t}\n\n\tlink(scope, elem, attrs, ctrl) {\n\t\tthis.$panelContainer = elem.find('.panel-container');\n\t\tthis.$panelContainer.addClass(\"st-card\");\n\t\tthis.$panelContoller = ctrl;\n\t}\n}\n\nStatusPluginCtrl.templateUrl = 'module.html';\n"]}